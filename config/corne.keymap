/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//     |0        |1        |2        |3        |4        |5        | |6        |7        |8        |9        |10        |11       |
        &kp ESC   &kp Q     &kp W     &kp F     &kp P     &kp B       &kp J     &kp L     &kp U     &kp Y     &kp SEMI   &kp ESC
//     |         |         |         |         |         |         | |         |         |         |         |          |         |
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//     |12       |13       |14       |15       |16       |17       | |18       |19       |20       |21       |22        |23       |
        &kp ESC   &kp A     &kp R     &kp S     &kp T     &kp G       &kp M     &kp N     &kp E     &kp I     &kp O      &kp ESC
//     |         |         |         |         |         |         | |         |         |         |         |          |         |
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//     |24       |25       |26       |27       |28       |29       | |30       |31       |32       |33       |34        |35       |
        &kp ESC   &kp Z     &kp X     &kp C     &kp D     &kp V       &kp K     &kp H     &kp COMMA &kp DOT   &kp FSLH   &kp ESC
//     |         |         |         |         |         |         | |         |         |         |         |          |         |
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//
//                                   +---------+---------+---------+ +---------+---------+---------+
//                                   |36       |37       |38       | |39       |40       |41       |
                                      &mo 2     &kp LCMD  &kp SPACE   &kp LSHFT &kp BKSP  &kp LCTRL
//                                   |         |         |         | |         |         |         |
//                                   +---------+---------+---------+ +---------+---------+---------+
      >;
    };

    num_layer {
      bindings = <
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//     |0        |1        |2        |3        |4        |5        | |6        |7        |8        |9        |10        |11       |
        &trans    &bt BT_SEL 0
                            &bt BT_SEL 1
                                      &bt BT_SEL 2
                                                &bt BT_SEL 3
                                                          &bt BT_SEL 4
                                                                      &kp KP_SLASH
                                                                                &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_ASTERISK
                                                                                                                         &trans
//     |         |         |         |         |         |         | |         |         |         |         |          |         |
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//     |12       |13       |14       |15       |16       |17       | |18       |19       |20       |21       |22        |23       |
        &trans    &trans    &bt BT_PRV
                                      &bt BT_CLR
                                                &bt BT_NXT
                                                          &trans      &kp KP_ENTER
                                                                                &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_MINUS
                                                                                                                         &trans
//     |         |         |         |         |         |         | |         |         |         |         |          |         |
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//     |24       |25       |26       |27       |28       |29       | |30       |31       |32       |33       |34        |35       |
        &trans    &to 0     &trans    &trans    &trans    &trans      &kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_PLUS
                                                                                                                         &trans
//     |         |         |         |         |         |         | |         |         |         |         |          |         |
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//
//                                   +---------+---------+---------+ +---------+---------+---------+
//                                   |36       |37       |38       | |39       |40       |41       |
                                      &trans    &trans    &trans      &trans    &trans    &kp KP_DOT
//                                   |         |         |         | |         |         |         |
//                                   +---------+---------+---------+ +---------+---------+---------+
      >;
    };

    overlay_layer {
      bindings = <
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//     |0        |1        |2        |3        |4        |5        | |6        |7        |8        |9        |10        |11       |
        &trans    &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5   &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0  &trans
//     |         |         |         |         |         |         | |         |         |         |         |          |         |
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//     |12       |13       |14       |15       |16       |17       | |18       |19       |20       |21       |22        |23       |
        &trans    &trans    &kp C_VOLUME_DOWN
                                      &kp C_MUTE
                                                &kp C_VOLUME_UP
                                                          &trans      &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp LG(LC(Q))
                                                                                                                         &trans
//     |         |         |         |         |         |         | |         |         |         |         |          |         |
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//     |24       |25       |26       |27       |28       |29       | |30       |31       |32       |33       |34        |35       |
        &trans    &to 1     &kp C_PREV
                                      &kp C_PLAY_PAUSE
                                                &kp C_NEXT
                                                          &trans      &kp LA(LEFT)
                                                                                &kp LA(DOWN)
                                                                                          &kp LA(UP)
                                                                                                    &kp LA(RIGHT)
                                                                                                              &out OUT_TOG
                                                                                                                         &trans
//     |         |         |         |         |         |         | |         |         |         |         |          |         |
//     +---------+---------+---------+---------+---------+---------+ +---------+---------+---------+---------+----------+---------+
//
//                                   +---------+---------+---------+ +---------+---------+---------+
//                                   |36       |37       |38       | |39       |40       |41       |
                                      &trans    &trans    &trans      &caps_word
                                                                                &trans    &trans
//                                   |         |         |         | |         |         |         |
//                                   +---------+---------+---------+ +---------+---------+---------+
      >;
    };

  };
};

/ {
  combos {
    compatible = "zmk,combos";

    combo_left {
      timeout-ms = <50>;
      key-positions = <18 40>;
      bindings = <&kp LEFT>;
    };
    combo_down {
      timeout-ms = <50>;
      key-positions = <19 40>;
      bindings = <&kp DOWN>;
    };
    combo_up {
      timeout-ms = <50>;
      key-positions = <20 40>;
      bindings = <&kp UP>;
    };
    combo_right {
      timeout-ms = <50>;
      key-positions = <21 40>;
      bindings = <&kp RIGHT>;
    };

    combo_num_1 {
      timeout-ms = <50>;
      key-positions = <1 14>;
      bindings = <&kp NUM_1>;
    };
    combo_num_2 {
      timeout-ms = <50>;
      key-positions = <2 15>;
      bindings = <&kp NUM_2>;
    };
    combo_num_3 {
      timeout-ms = <50>;
      key-positions = <3 16>;
      bindings = <&kp NUM_3>;
    };
    combo_num_4 {
      timeout-ms = <50>;
      key-positions = <4 17>;
      bindings = <&kp NUM_4>;
    };
    combo_num_5 {
      timeout-ms = <100>;
      key-positions = <5 17>;
      bindings = <&kp NUM_5>;
    };
    combo_num_6 {
      timeout-ms = <100>;
      key-positions = <6 18>;
      layers = <0>;
      bindings = <&kp NUM_6>;
    };
    combo_num_7 {
      timeout-ms = <50>;
      key-positions = <7 18>;
      layers = <0>;
      bindings = <&kp NUM_7>;
    };
    combo_num_8 {
      timeout-ms = <50>;
      key-positions = <8 19>;
      layers = <0>;
      bindings = <&kp NUM_8>;
    };
    combo_num_9 {
      timeout-ms = <50>;
      key-positions = <9 20>;
      layers = <0>;
      bindings = <&kp NUM_9>;
    };
    combo_num_0 {
      timeout-ms = <50>;
      key-positions = <10 21>;
      layers = <0>;
      bindings = <&kp NUM_0>;
    };

    combo_escape {
      timeout-ms = <100>;
      key-positions = <14 15 16>;
      bindings = <&kp ESC>;
    };
    combo_tab {
      timeout-ms = <100>;
      key-positions = <1 2 15>;
      bindings = <&kp TAB>;
    };
    combo_enter {
      timeout-ms = <50>;
      key-positions = <19 39>;
      bindings = <&kp ENTER>;
    };
    combo_shift_enter {
      timeout-ms = <100>;
      key-positions = <19 39 22>;
      bindings = <&kp LS(ENTER)>;
    };
    combo_alt {
      timeout-ms = <50>;
      key-positions = <38 40>;
      bindings = <&kp LEFT_ALT>;
    };

    combo_grave {
      timeout-ms = <100>;
      key-positions = <2 3 4>;
      bindings = <&kp GRAVE>;
    };

    combo_minus {
      timeout-ms = <100>;
      key-positions = <7 8 9>;
      layers = <0>;
      bindings = <&kp MINUS>;
    };
    combo_underscore {
      timeout-ms = <100>;
      key-positions = <6 7 8>;
      layers = <0>;
      bindings = <&kp UNDERSCORE>;
    };

    combo_equal {
      timeout-ms = <100>;
      key-positions = <19 20 21>;
      layers = <0>;
      bindings = <&kp EQUAL>;
    };
    combo_plus {
      timeout-ms = <100>;
      key-positions = <18 19 20>;
      layers = <0>;
      bindings = <&kp PLUS>;
    };

    combo_single_quote {
      timeout-ms = <100>;
      key-positions = <20 21 22>;
      layers = <0>;
      bindings = <&kp SINGLE_QUOTE>;
    };
    combo_double_quote {
      timeout-ms = <100>;
      key-positions = <32 33 34>;
      layers = <0>;
      bindings = <&kp DOUBLE_QUOTES>;
    };

    combo_backslash {
      timeout-ms = <100>;
      key-positions = <31 32 33>;
      layers = <0>;
      bindings = <&kp BACKSLASH>;
    };
    combo_pipe {
      timeout-ms = <100>;
      key-positions = <30 31 32>;
      layers = <0>;
      bindings = <&kp PIPE>;
    };

    combo_lparen {
      timeout-ms = <50>;
      key-positions = <2 3>;
      bindings = <&kp LEFT_PARENTHESIS>;
    };
    combo_rparen {
      timeout-ms = <50>;
      key-positions = <3 4>;
      bindings = <&kp RIGHT_PARENTHESIS>;
    };

    combo_lbracket {
      timeout-ms = <50>;
      key-positions = <26 27>;
      bindings = <&kp LEFT_BRACKET>;
    };
    combo_rbracket {
      timeout-ms = <50>;
      key-positions = <27 28>;
      bindings = <&kp RIGHT_BRACKET>;
    };

    combo_lbrace {
      timeout-ms = <50>;
      key-positions = <2 16>;
      bindings = <&kp LEFT_BRACE>;
    };
    combo_rbrace {
      timeout-ms = <50>;
      key-positions = <4 14>;
      bindings = <&kp RIGHT_BRACE>;
    };

    combo_langle {
      timeout-ms = <50>;
      key-positions = <7 21>;
      layers = <0>;
      bindings = <&kp LESS_THAN>;
    };
    combo_rangle {
      timeout-ms = <50>;
      key-positions = <9 19>;
      layers = <0>;
      bindings = <&kp GREATER_THAN>;
    };

    combo_alt_left {
      timeout-ms = <50>;
      key-positions = <19 20 30>;
      layers = <0>;
      bindings = <&kp LA(LEFT_ARROW)>;
    };
    combo_alt_down {
      timeout-ms = <50>;
      key-positions = <18 19 32>;
      layers = <0>;
      bindings = <&kp LA(DOWN_ARROW)>;
    };
    combo_alt_up {
      timeout-ms = <50>;
      key-positions = <19 20 33>;
      layers = <0>;
      bindings = <&kp LA(UP_ARROW)>;
    };
    combo_alt_right {
      timeout-ms = <50>;
      key-positions = <20 21 31>;
      layers = <0>;
      bindings = <&kp LA(RIGHT_ARROW)>;
    };

    combo_ctrl_c {
      timeout-ms = <100>;
      key-positions = <26 27 28>;
      bindings = <&kp LC(C)>;
    };

    combo_ctrl_d {
      timeout-ms = <100>;
      key-positions = <14 15 37>;
      bindings = <&kp LC(D)>;
    };
    combo_ctrl_u {
      timeout-ms = <100>;
      key-positions = <20 21 40>;
      bindings = <&kp LC(U)>;
    };

    combo_alt_bs { // doesn't work
      timeout-ms = <100>;
      key-positions = <40 22>;
      bindings = <&kp LA(BACKSPACE)>;
    };
    combo_shift {
      timeout-ms = <100>;
      key-positions = <25 26>;
      bindings = <&kp LSHIFT>;
    };

    combo_cmd_tab {
      timeout-ms = <100>;
      key-positions = <14 15 28>;
      bindings = <&kp LG(TAB)>;
    };
    combo_shift_cmd_tab {
      timeout-ms = <100>;
      key-positions = <15 16 26>;
      bindings = <&kp LG(LS(TAB))>;
    };

    combo_ctrl_tab {
      timeout-ms = <100>;
      key-positions = <15 16 29>;
      bindings = <&kp LC(TAB)>;
    };
    combo_shift_ctrl_tab {
      timeout-ms = <100>;
      key-positions = <16 17 27>;
      bindings = <&kp LC(LS(TAB))>;
    };

    combo_num {
      timeout-ms = <100>;
      key-positions = <14 3 16>;
      bindings = <&to 1>;
    };
  };
};
